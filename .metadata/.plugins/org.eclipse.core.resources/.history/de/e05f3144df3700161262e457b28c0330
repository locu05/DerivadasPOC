package derivadas;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class Main {
	
	public static void main(String[] args) {
		
		double rangeMax1 = 50;
		double rangeMin1 = 51;
		double rangeMax2 = 70;
		double rangeMin2 = 75;
		Redondear r = new Redondear();//Objeto que alberga un valor dado de tipo double, redondeado a 2 decimales
		
		Map<Integer,Double> mapaDeValores = new HashMap<Integer,Double>();
		Random random = new Random();
		for(int i = 0 ; i<99 ; i++){
			double randomValue = rangeMin1 + (rangeMax1 - rangeMin1) * random.nextDouble();
			mapaDeValores.put(i, randomValue);
		}
		
		for(int i = 99 ; i<150 ; i++){
			double randomValue = rangeMin1 + (rangeMax1 - rangeMin1) * random.nextDouble();
			mapaDeValores.put(i, randomValue);
		}
		
		Derivacion2 primD = new Derivacion2();//Objeto de la clase Derivacion2 que albergara la primera derivada
		Derivacion2 segD = new Derivacion2();//Objeto de la clase Derivacion2 que albergara la segunda derivada
		
		primD.x = Double.parseDouble("1");
		primD.deltaX = Double.parseDouble("0.01");
		
		for(int i = 0 ; i<99 ; i++){
			//Calculo de la 1° derivada por la diferencia dividida central
			primD.centradas = (primD.funcion(r.redondeo(primD.x+primD.deltaX,2),mapaDeValores)-primD.funcion(r.redondeo(primD.x-primD.deltaX,2),mapaDeValores))/(2*primD.deltaX);
			//Calculo de la 2° derivada por la diferencia dividida central
			segD.centradas = (primD.funcion(r.redondeo(primD.x+primD.deltaX,2),mapaDeValores)-2*(primD.funcion(primD.x,mapaDeValores))+primD.funcion(r.redondeo(primD.x-primD.deltaX,2),mapaDeValores))/(primD.deltaX*primD.deltaX);
			//Impresion de los resultados obtenidos
			System.out.println("El valor aproximado de f'(x) valuada en x="+primD.x+" por diferencia centrada \nes "+r.redondeo(primD.centradas,6)+"\n");
			System.out.println("El valor aproximado de f''(x) valuada en x="+primD.x+" por diferencia centrada \nes "+r.redondeo(segD.centradas,6));
		}

	}

}
